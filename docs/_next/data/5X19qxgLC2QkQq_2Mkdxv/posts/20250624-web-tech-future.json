{"pageProps":{"content":"<!doctype html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  </head>\n  <body>\n    <p>ChatGPT と予想した Web 開発の現在と未来.</p>\n    <ul>\n      <li>Java/C#など、隣近所の界隈はわからないので割愛する</li>\n      <li>現状の観測範囲からできる範囲で予測するだけ（結局「わからない」が答えになってしまうので）.</li>\n    </ul>\n    <h3>現在</h3>\n    <ul>\n      <li>Backend:\n        <ul>\n          <li>PHP/Rails が主流だったが、移行が始まっている.</li>\n          <li>Go が増えてきていて、軌道に乗った印象がある. ベンチャー界隈の Go の求人は PHP と同じくらいかも.</li>\n          <li>TypeScript は、Next.js とのフルスタック構成や Nest.js などでの独立 Backend 構成など.\n            <ul>\n              <li>Frontend との型の共有や強み. Next.js は 1 プロジェクトで完結も強み.</li>\n            </ul>\n          </li>\n        </ul>\n      </li>\n      <li>Frontend:\n        <ul>\n          <li>TypeScript 一択.</li>\n          <li>React 全盛.\n            <ul>\n              <li>SPA 向けに Vite, RSC 対応（または将来的にこれを見据えた）Next.js の使い分け</li>\n            </ul>\n          </li>\n          <li>Vue.js は衰退気味.</li>\n        </ul>\n      </li>\n    </ul>\n    <h3>将来</h3>\n    <ul>\n      <li>\n        <p>Backend</p>\n        <ul>\n          <li>Go/TypeScript/Rust が主流になる\n            <ul>\n              <li>パフォーマンスと実装の簡易さのバランスが良い Go は強そう</li>\n              <li>Front と共通で TypeScript&#x26;Rust が主流になり、Go が減っていく可能性も？</li>\n            </ul>\n          </li>\n          <li>PHP/Rais は保守のみ</li>\n        </ul>\n      </li>\n      <li>\n        <p>Frontend:</p>\n        <ul>\n          <li>TypeScript の立ち位置は変わらず</li>\n          <li>思い処理向けの WebAssembly の普及が進む\n            <ul>\n              <li>Rust</li>\n              <li>TypeScript と共存する</li>\n            </ul>\n          </li>\n          <li>React は存在感を残しつつ、Solid/Qwik がかなり増える\n            <ul>\n              <li>React は多機能でエコシステムも巨大だが、パフォーマンスの問題がある</li>\n              <li>React の正統進化の Solid, 初期表示に大きなアドバンテージのある Qwik が台頭していく</li>\n            </ul>\n          </li>\n        </ul>\n      </li>\n    </ul>\n  </body>\n</html>\n","title":"2030年までのWeb開発","date":"2025-06-24","matters":[{"slug":"2023-frontend-developer-roadmap","title":"2023年版Frontend Developer Roadmapを見てみる","date":"2023-08-21"},{"slug":"20250619-bff","title":"BFF（Backend For Frontend）とは","date":"2025-06-19"},{"slug":"20250620-db-transaction-lock","title":"DBのトランザクションとロック","date":"2026-06-24"},{"slug":"20250624-ai-fullstack","title":"イベント「技術の総合格闘技、生成AI時代のフルスタック開発」","date":"2025-06-24"},{"slug":"20250624-til","title":"TIL 2025/06/24","date":"2025-06-24"},{"slug":"20250624-web-tech-future","title":"2030年までのWeb開発","date":"2025-06-24"},{"slug":"20250627-til","title":"TIL 2025/06/27","date":"2025-06-27"},{"slug":"frontend-2025","title":"【React / Next.js / TypeScript 開発で今押さえておくべきこと（2025年版）】","date":"2025-06-19"},{"slug":"interface-merge","title":"TypeScriptでのInterfaceのマージについて","date":"2024-07-07"},{"slug":"interface-vs-types","title":"TypeScriptのinterfaceとtypeの使い分け","date":"2024-07-06"},{"slug":"material-ui","title":"Material UI: モダンなフロントエンド開発の強力なツール","date":"2024-08-16"},{"slug":"monorepo","title":"モダンフロントエンドとモノレポ","date":"2024-07-07"},{"slug":"my-blog-1","title":"【自作ブログ 1】自作ブログを作りたい","date":"2023-02-06"},{"slug":"my-blog-2","title":"【自作ブログ 2】Markdownをparseする","date":"2023-02-19"},{"slug":"react-vs-svelte","title":"React vs Svelte: モダンウェブ開発の新たな選択肢","date":"2024-07-07"}]},"__N_SSG":true}